// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VenomHubPhotoWebSiteAdminPanel.Db;

#nullable disable

namespace VenomHubPhotoWebSiteAdminPanel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240806065510_photoDb")]
    partial class photoDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.AdminModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AdminCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("AdminEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdminPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tblAdmin");

                    b.HasData(
                        new
                        {
                            Id = "a11e5c1c-b664-4a25-b493-634b5fbfb1fe",
                            AdminCreatedAt = new DateTime(2024, 8, 6, 6, 55, 10, 627, DateTimeKind.Utc).AddTicks(1967),
                            AdminEmail = "admin@photo.com",
                            AdminName = "Default Admin",
                            AdminPassword = "QWRtaW5AMTIz"
                        });
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.AlbumModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlbumCreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("AlbumDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AlbumPhoto")
                        .IsRequired()
                        .HasMaxLength(2500)
                        .HasColumnType("nvarchar(2500)");

                    b.HasKey("Id");

                    b.ToTable("tblAlbum");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlbumCreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CategoryPhoto")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("tblCategory");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.LoginDetailModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogOutAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SessionExpired")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("loginAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tblLoginDetail");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.PhotoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AlbumCreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("AlbumName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PhotoDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhotoName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("CategoryId");

                    b.ToTable("tblPhoto");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.LoginDetailModel", b =>
                {
                    b.HasOne("VenomHubPhotoWebSiteAdminPanel.Models.AdminModel", "Admin")
                        .WithMany()
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.PhotoModel", b =>
                {
                    b.HasOne("VenomHubPhotoWebSiteAdminPanel.Models.AlbumModel", "Album")
                        .WithMany("Photos")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VenomHubPhotoWebSiteAdminPanel.Models.CategoryModel", "Category")
                        .WithMany("Photos")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Album");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.AlbumModel", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("VenomHubPhotoWebSiteAdminPanel.Models.CategoryModel", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
